1.vue的原理？
2.vue双向绑定的原理？
3.浏览器输入url后都进行了什么？
4、如何看到vuex？
vuex就是要集中管理vue中需要跨组件的state,
获取直接用this.$store.state. 或者封装一个get方法。
这个sate只能通过调用mutations改修改，action也是去调用mutations。
5、vue的生命周期？
beforeCreate、created
beforeMount、mounted
beforeUpdate、updated
beforeDestroy、destroyed
6、你对Vue.js的template编译的理解？
简单的说是先转化为AST（abstract syntax tree）树，在得到的render函数中返回VNode（虚拟节点）。
通过通过compile编译器把template编译成AST语法树，AST会经过generate（将AST语法树转化成render function字符串的过程）得到render函数，
render的返回值是VNode，VNode是Vue的虚拟DOM节点，里面包含（标签名、子节点、文本等）。
7、常用修饰符？
v-model.lazy、v-model.number、v-model.trim
v-on:click.stop、v-on:click.prevent、v-on:keyup:enter
.ctrl、.alt、.shift、.meta

8、子如何调用父组件的方法？
a、this.$parent.event;this.$children.event(少用)、this.$refs.son
b、子利用$emit向父组件触发一个事件，父组件监听这个事件去调用。

9、v-for循环后加Class active？
<li v-on:click="clicked=!clicked" class="item" v-bind:class="clicked?'active':''" v-for="ctrlValue in desc.args">
    <a>{{ctrlValue}}</a>
</li>

10、vue 如何利用全局变量？
const baseURL = 'http://www.phonegap100.com'
export default {
  baseURL,
}
//main.js全局引入js变量
import config from '@/api/config.js';
Vue.prototype.config=config;
用时 this.config.baseURL

11、vue-router的生命周期（钩子调用）？
全局前置守卫 ——>路由独享守卫——>beforeRouterEnter——>后置钩子——>vue实例初始化   点击页面跳转
router.beforeEach(main.js) ---> 
beforeEnter(router配置中) ---> 
beforeRouterEnter，beforeRouteUpdate，beforeRouteLeave(组件中) ---> 
router.afterEach(main.js)

12、mode为hash、history的区别和优缺点？
在url中hash在端口号或域名后面带#，history不带
路径错误后，处理方式不一样

13、动态路由如何获取参数？
a、
路由配置{ name: 'home', path: '/home/:id', component: home },   //注意name根router-link一致
http:localhost:8080/home/11
<router-link :to="'/home/'+3">home</router-link>
<router-link :to="{name:'home',params:{id:2}}">home</router-link>
this.$router.params.参数
b、
路由配置{ name: 'Home', path: '/home', component: home }
http:localhost:8080/home?id=11
<router-link :to="'/home?id='+11">home</router-link>
<router-link :to="{ path: 'home', query: { id: 11 }}">home</router-link>
this.$router.query.参数

14、vuex的核心概念？
vuex就是要集中管理vue中需要跨组件的state。
vuex有五个核心概念，state、getters、mutations、actions、modules
this.$store.state.状态
this.$store.getters.方法
this.$store.commit("方法"，...)
this.$store.dispatch("方法",...)

什么叫发布订阅模式？
发布---订阅模式又叫观察者模式，它定义了对象间的一种一对多的关系，让多个观察者对象同时
监听某一个主题对象，当一个对象发生改变时，所有依赖于它的对象都将得到通知。

ajax、axios、fetch有什么区别？
ajax、axios都是基于传输HttpRequestXML对象进行的，axios进行了一个Promise封装。
fetch为转为跨域请求新增的一个api，因为其发出请求后不能中断，故vue推荐使用axios请求数据。
